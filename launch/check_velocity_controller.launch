<?xml version="1.0"?>
<launch>
	<!-- Load joint controller configurations from YAML file to parameter server -->
	<rosparam file="$(find diff_drive)/config/controllers.yaml" command="load"/>
	<!-- <rosparam file="$(find ros_control_example)/config/joint_limits.yaml" command="load"/> -->

	<arg name="model" default="$(find diff_drive)/urdf/single_joint_actuator.urdf.xacro"/>
	<arg name="gui" default="true" />

	<!-- Load the URDF into the ROS Parameter Server -->
	<param name="robot_description" command="$(find xacro)/xacro.py $(arg model)"/>
	<param name="use_gui" value="$(arg gui)"/>

	<rosparam param="wheel_separation">0.2</rosparam>
	<rosparam param="wheel_radius">0.035</rosparam>

	<node pkg="rqt_reconfigure" type="rqt_reconfigure" name="rqt_reconfigure"/>
	<node pkg="rosserial_python" type="serial_node.py" name="serial_node">
		<param name="port" value="/dev/ttyUSB0"/>
		<param name="baud" value="57600"/>
	</node>

	<!--
roslaunch turtlebot_teleop keyboard_teleop.launch
  rosrun teleop_twist_keyboard teleop_twist_keyboard.py
roslaunch robotican_lizi lizi.launch gazebo:=true
-->
	<node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering"/>
	<node name="robot_hardware_interface" pkg="diff_drive" type="single_joint_hardware_interface" output="screen"/>

	<node name="subscriber_py" pkg="diff_drive" type="joints_receive_from_arduino.py" output="screen"/>
	<node name="twist_to_motors" pkg="diff_drive" type="twist_to_motors.py" output="screen">

	</node>

	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find diff_drive)/rviz/single_joint.rviz" required="true"/>

	<!-- convert joint states to TF transforms for rviz, etc -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
		respawn="false" output="screen">
		<remap from="/joint_states" to="/mbot/joint_states" />
	</node>

	<!-- plz refer to yaml file -->
	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
		  ns="/mbot" args="			
        	joints_update
            joint1_velocity_controller
			joint2_velocity_controller
        "/>


</launch>

<!--
   note that we cannot run position controller and velocity controller at the same time, so we create two launch files.
    roslaunch diff_drive check_velocity_controller.launch
    rosrun rosserial_python serial_node.py _port:=/dev/ttyUSB0
    rostopic pub /single_joint_actuator/joint1_velocity_controller/command std_msgs/Float64 "data: 0.57"
    rosrun rqt_reconfigure rqt_reconfigure
    rosrun rqt_plot rqt_plot

  rostopic pub /single_joint_actuator/joint1_velocity_controller/command std_msgs/Float64 "data: 0.6"
-->