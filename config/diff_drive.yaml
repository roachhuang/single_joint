Diff_Drive:
  diff_drive_controller:

  type: "diff_drive_controller/DiffDriveController"
  left_wheel: 'A'
  right_wheel: 'B'

  left_wheel_velocity_controller:
    type: velocity_controllers/JointVelocityController
    joint: A  # base_to_0_wheel
    pid: {p: 150, i: 0.00001, d: 0.0001}

  right_wheel_velocity_controller:
    type: velocity_controllers/JointVelocityController
    joint: B  # base_to_1_wheel
    pid: {p: 400, i: 19, d: 10.0}
 
  # Odometry covariances for the encoder output of the robot
  # These values should be tuned to your robot's sample odometry data,
  # but these values are a godd place to start
  pose_covariance_diagonal : [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
  twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]

  # Wheel separation and diameter. These are both optional.
  # diff_drive_controller will attempt to read either one or both from the
  # URDF if not specified as a parameter
  wheel_separation : 0.22
  wheel_radius : 0.0325

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.0 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity commands timeout [s], default 0.5
  cmd_vel_timeout: 0.25

  # Base frame_id
  base_frame_id: base_footprint #default: base_link

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 1.0  # m/s
      min_velocity           : -0.5 # m/s
      has_acceleration_limits: true
      max_acceleration       : 0.8  # m/s^2
      min_acceleration       : -0.4 # m/s^2
      has_jerk_limits        : true
      max_jerk               : 5.0  # m/s^3
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 1.7  # rad/s
      has_acceleration_limits: true
      max_acceleration       : 1.5  # rad/s^2
      has_jerk_limits        : true
      max_jerk               : 2.5  # rad/s^3